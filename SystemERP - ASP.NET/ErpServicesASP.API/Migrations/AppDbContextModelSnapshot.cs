// <auto-generated />
using System;
using ErpServicesASP.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ErpServicesASP.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ErpServicesASP.API.Model.AddressModel", b =>
                {
                    b.Property<int>("IdAdress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAdress"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EnterpriseIdEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ThirdidTerceiros")
                        .HasColumnType("integer");

                    b.HasKey("IdAdress");

                    b.HasIndex("EnterpriseIdEmpresa");

                    b.HasIndex("ThirdidTerceiros");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.CargoModel", b =>
                {
                    b.Property<int>("idCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idCargo"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idCargo");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.EnterpriseModel", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EnterpriseTypeidTipoDeEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("FantasyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("SectoridSetor")
                        .HasColumnType("integer");

                    b.HasKey("IdEmpresa");

                    b.HasIndex("EnterpriseTypeidTipoDeEmpresa");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SectoridSetor");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.EnterpriseTypeModel", b =>
                {
                    b.Property<int>("idTipoDeEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTipoDeEmpresa"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idTipoDeEmpresa");

                    b.ToTable("EnterpriseTypes");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.MemberModel", b =>
                {
                    b.Property<int>("idMembro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idMembro"));

                    b.Property<int>("AddressIdAdress")
                        .HasColumnType("integer");

                    b.Property<string>("AssociacaoPublica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CargoidCargo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EmpresaIdEmpresa")
                        .HasColumnType("integer");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NaturezaMembro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("idMembro");

                    b.HasIndex("AddressIdAdress");

                    b.HasIndex("CargoidCargo");

                    b.HasIndex("EmpresaIdEmpresa");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.SectorModel", b =>
                {
                    b.Property<int>("idSetor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idSetor"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idSetor");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.StorageModel", b =>
                {
                    b.Property<int>("id_armazem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_armazem"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_armazem");

                    b.ToTable("armazem");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.TelephoneModel", b =>
                {
                    b.Property<int>("IdTelephone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTelephone"));

                    b.Property<int>("EnterpriseIdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int>("MemberidMembro")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Storageid_armazem")
                        .HasColumnType("integer");

                    b.Property<int>("ThirdidTerceiros")
                        .HasColumnType("integer");

                    b.HasKey("IdTelephone");

                    b.HasIndex("EnterpriseIdEmpresa");

                    b.HasIndex("MemberidMembro");

                    b.HasIndex("Storageid_armazem");

                    b.HasIndex("ThirdidTerceiros");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.ThirdPartiesModel", b =>
                {
                    b.Property<int>("idTerceiros")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTerceiros"));

                    b.Property<double>("capital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("estadoAtividade")
                        .HasColumnType("boolean");

                    b.Property<bool>("fornecedor")
                        .HasColumnType("boolean");

                    b.Property<bool>("impostoSobVenda")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("logotipo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("nomeEFantasia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("quantidadeColaboradores")
                        .HasColumnType("integer");

                    b.Property<bool>("segundoImposto")
                        .HasColumnType("boolean");

                    b.HasKey("idTerceiros");

                    b.ToTable("terceiros");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.AddressModel", b =>
                {
                    b.HasOne("ErpServicesASP.API.Model.EnterpriseModel", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseIdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.ThirdPartiesModel", "Third")
                        .WithMany()
                        .HasForeignKey("ThirdidTerceiros")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("Third");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.EnterpriseModel", b =>
                {
                    b.HasOne("ErpServicesASP.API.Model.EnterpriseTypeModel", "EnterpriseType")
                        .WithMany()
                        .HasForeignKey("EnterpriseTypeidTipoDeEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.UserModel", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.SectorModel", "Sector")
                        .WithMany()
                        .HasForeignKey("SectoridSetor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnterpriseType");

                    b.Navigation("Owner");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.MemberModel", b =>
                {
                    b.HasOne("ErpServicesASP.API.Model.AddressModel", "Address")
                        .WithMany()
                        .HasForeignKey("AddressIdAdress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.CargoModel", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoidCargo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.EnterpriseModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaIdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.UserModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Cargo");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ErpServicesASP.API.Model.TelephoneModel", b =>
                {
                    b.HasOne("ErpServicesASP.API.Model.EnterpriseModel", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseIdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.MemberModel", "Member")
                        .WithMany()
                        .HasForeignKey("MemberidMembro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.StorageModel", "Storage")
                        .WithMany()
                        .HasForeignKey("Storageid_armazem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErpServicesASP.API.Model.ThirdPartiesModel", "Third")
                        .WithMany()
                        .HasForeignKey("ThirdidTerceiros")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("Member");

                    b.Navigation("Storage");

                    b.Navigation("Third");
                });
#pragma warning restore 612, 618
        }
    }
}
